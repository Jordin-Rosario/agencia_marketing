{"ast":null,"code":"import { useMultiSelectListState } from \"./chunk-RVB7J7GX.mjs\";\n\n// src/use-multiselect-state.ts\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useFormValidationState } from \"@react-stately/form\";\nimport { useState } from \"react\";\nfunction useMultiSelectState(props) {\n  const [isFocused, setFocused] = useState(false);\n  const [focusStrategy, setFocusStrategy] = useState(null);\n  const triggerState = useMenuTriggerState(props);\n  const listState = useMultiSelectListState({\n    ...props,\n    onSelectionChange: keys => {\n      if (props.onSelectionChange != null) {\n        if (keys === \"all\") {\n          props.onSelectionChange(new Set(listState.collection.getKeys()));\n        } else {\n          props.onSelectionChange(keys);\n        }\n      }\n      if (props.selectionMode === \"single\") {\n        triggerState.close();\n      }\n    }\n  });\n  const validationState = useFormValidationState({\n    ...props,\n    validationBehavior: \"native\",\n    value: listState.selectedKeys\n  });\n  return {\n    ...validationState,\n    ...listState,\n    ...triggerState,\n    focusStrategy,\n    close() {\n      triggerState.close();\n    },\n    open(focusStrategy2 = null) {\n      if (listState.collection.size !== 0) {\n        setFocusStrategy(focusStrategy2);\n        triggerState.open();\n      }\n    },\n    toggle(focusStrategy2 = null) {\n      if (listState.collection.size !== 0) {\n        setFocusStrategy(focusStrategy2);\n        triggerState.toggle();\n        validationState.commitValidation();\n      }\n    },\n    isFocused,\n    setFocused\n  };\n}\nexport { useMultiSelectState };","map":{"version":3,"names":["useMultiSelectListState","useMenuTriggerState","useFormValidationState","useState","useMultiSelectState","props","isFocused","setFocused","focusStrategy","setFocusStrategy","triggerState","listState","onSelectionChange","keys","Set","collection","getKeys","selectionMode","close","validationState","validationBehavior","value","selectedKeys","open","focusStrategy2","size","toggle","commitValidation"],"sources":["C:/Users/Jordin Rosario/agencia/agencia_marketing/node_modules/@nextui-org/use-aria-multiselect/dist/chunk-YBYFWAAH.mjs"],"sourcesContent":["import {\r\n  useMultiSelectListState\r\n} from \"./chunk-RVB7J7GX.mjs\";\r\n\r\n// src/use-multiselect-state.ts\r\nimport { useMenuTriggerState } from \"@react-stately/menu\";\r\nimport { useFormValidationState } from \"@react-stately/form\";\r\nimport { useState } from \"react\";\r\nfunction useMultiSelectState(props) {\r\n  const [isFocused, setFocused] = useState(false);\r\n  const [focusStrategy, setFocusStrategy] = useState(null);\r\n  const triggerState = useMenuTriggerState(props);\r\n  const listState = useMultiSelectListState({\r\n    ...props,\r\n    onSelectionChange: (keys) => {\r\n      if (props.onSelectionChange != null) {\r\n        if (keys === \"all\") {\r\n          props.onSelectionChange(new Set(listState.collection.getKeys()));\r\n        } else {\r\n          props.onSelectionChange(keys);\r\n        }\r\n      }\r\n      if (props.selectionMode === \"single\") {\r\n        triggerState.close();\r\n      }\r\n    }\r\n  });\r\n  const validationState = useFormValidationState({\r\n    ...props,\r\n    validationBehavior: \"native\",\r\n    value: listState.selectedKeys\r\n  });\r\n  return {\r\n    ...validationState,\r\n    ...listState,\r\n    ...triggerState,\r\n    focusStrategy,\r\n    close() {\r\n      triggerState.close();\r\n    },\r\n    open(focusStrategy2 = null) {\r\n      if (listState.collection.size !== 0) {\r\n        setFocusStrategy(focusStrategy2);\r\n        triggerState.open();\r\n      }\r\n    },\r\n    toggle(focusStrategy2 = null) {\r\n      if (listState.collection.size !== 0) {\r\n        setFocusStrategy(focusStrategy2);\r\n        triggerState.toggle();\r\n        validationState.commitValidation();\r\n      }\r\n    },\r\n    isFocused,\r\n    setFocused\r\n  };\r\n}\r\n\r\nexport {\r\n  useMultiSelectState\r\n};\r\n"],"mappings":"AAAA,SACEA,uBAAuB,QAClB,sBAAsB;;AAE7B;AACA,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,sBAAsB,QAAQ,qBAAqB;AAC5D,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAClC,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMO,YAAY,GAAGT,mBAAmB,CAACI,KAAK,CAAC;EAC/C,MAAMM,SAAS,GAAGX,uBAAuB,CAAC;IACxC,GAAGK,KAAK;IACRO,iBAAiB,EAAGC,IAAI,IAAK;MAC3B,IAAIR,KAAK,CAACO,iBAAiB,IAAI,IAAI,EAAE;QACnC,IAAIC,IAAI,KAAK,KAAK,EAAE;UAClBR,KAAK,CAACO,iBAAiB,CAAC,IAAIE,GAAG,CAACH,SAAS,CAACI,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC,MAAM;UACLX,KAAK,CAACO,iBAAiB,CAACC,IAAI,CAAC;QAC/B;MACF;MACA,IAAIR,KAAK,CAACY,aAAa,KAAK,QAAQ,EAAE;QACpCP,YAAY,CAACQ,KAAK,CAAC,CAAC;MACtB;IACF;EACF,CAAC,CAAC;EACF,MAAMC,eAAe,GAAGjB,sBAAsB,CAAC;IAC7C,GAAGG,KAAK;IACRe,kBAAkB,EAAE,QAAQ;IAC5BC,KAAK,EAAEV,SAAS,CAACW;EACnB,CAAC,CAAC;EACF,OAAO;IACL,GAAGH,eAAe;IAClB,GAAGR,SAAS;IACZ,GAAGD,YAAY;IACfF,aAAa;IACbU,KAAKA,CAAA,EAAG;MACNR,YAAY,CAACQ,KAAK,CAAC,CAAC;IACtB,CAAC;IACDK,IAAIA,CAACC,cAAc,GAAG,IAAI,EAAE;MAC1B,IAAIb,SAAS,CAACI,UAAU,CAACU,IAAI,KAAK,CAAC,EAAE;QACnChB,gBAAgB,CAACe,cAAc,CAAC;QAChCd,YAAY,CAACa,IAAI,CAAC,CAAC;MACrB;IACF,CAAC;IACDG,MAAMA,CAACF,cAAc,GAAG,IAAI,EAAE;MAC5B,IAAIb,SAAS,CAACI,UAAU,CAACU,IAAI,KAAK,CAAC,EAAE;QACnChB,gBAAgB,CAACe,cAAc,CAAC;QAChCd,YAAY,CAACgB,MAAM,CAAC,CAAC;QACrBP,eAAe,CAACQ,gBAAgB,CAAC,CAAC;MACpC;IACF,CAAC;IACDrB,SAAS;IACTC;EACF,CAAC;AACH;AAEA,SACEH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}