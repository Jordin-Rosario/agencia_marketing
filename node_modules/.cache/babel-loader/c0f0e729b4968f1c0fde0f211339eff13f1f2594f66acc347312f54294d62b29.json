{"ast":null,"code":"// src/index.ts\nimport { ariaHideOutside, useOverlay, usePreventScroll, useOverlayFocusContain } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useEffect } from \"react\";\nfunction useAriaModalOverlay() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    shouldBlockScroll: true\n  };\n  let state = arguments.length > 1 ? arguments[1] : undefined;\n  let ref = arguments.length > 2 ? arguments[2] : undefined;\n  let {\n    overlayProps,\n    underlayProps\n  } = useOverlay({\n    ...props,\n    isOpen: state.isOpen,\n    onClose: state.close\n  }, ref);\n  usePreventScroll({\n    isDisabled: !state.isOpen || !props.shouldBlockScroll\n  });\n  useOverlayFocusContain();\n  useEffect(() => {\n    if (state.isOpen && ref.current) {\n      return ariaHideOutside([ref.current]);\n    }\n  }, [state.isOpen, ref]);\n  return {\n    modalProps: mergeProps(overlayProps),\n    underlayProps\n  };\n}\nexport { useAriaModalOverlay };","map":{"version":3,"names":["ariaHideOutside","useOverlay","usePreventScroll","useOverlayFocusContain","mergeProps","useEffect","useAriaModalOverlay","props","arguments","length","undefined","shouldBlockScroll","state","ref","overlayProps","underlayProps","isOpen","onClose","close","isDisabled","current","modalProps"],"sources":["C:/Users/Jordin Rosario/agencia/agencia_marketing/node_modules/@nextui-org/use-aria-modal-overlay/dist/index.mjs"],"sourcesContent":["// src/index.ts\r\nimport {\r\n  ariaHideOutside,\r\n  useOverlay,\r\n  usePreventScroll,\r\n  useOverlayFocusContain\r\n} from \"@react-aria/overlays\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nimport { useEffect } from \"react\";\r\nfunction useAriaModalOverlay(props = {\r\n  shouldBlockScroll: true\r\n}, state, ref) {\r\n  let { overlayProps, underlayProps } = useOverlay(\r\n    {\r\n      ...props,\r\n      isOpen: state.isOpen,\r\n      onClose: state.close\r\n    },\r\n    ref\r\n  );\r\n  usePreventScroll({\r\n    isDisabled: !state.isOpen || !props.shouldBlockScroll\r\n  });\r\n  useOverlayFocusContain();\r\n  useEffect(() => {\r\n    if (state.isOpen && ref.current) {\r\n      return ariaHideOutside([ref.current]);\r\n    }\r\n  }, [state.isOpen, ref]);\r\n  return {\r\n    modalProps: mergeProps(overlayProps),\r\n    underlayProps\r\n  };\r\n}\r\nexport {\r\n  useAriaModalOverlay\r\n};\r\n"],"mappings":"AAAA;AACA,SACEA,eAAe,EACfC,UAAU,EACVC,gBAAgB,EAChBC,sBAAsB,QACjB,sBAAsB;AAC7B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,mBAAmBA,CAAA,EAEb;EAAA,IAFcC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IACnCG,iBAAiB,EAAE;EACrB,CAAC;EAAA,IAAEC,KAAK,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEG,GAAG,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACX,IAAI;IAAEI,YAAY;IAAEC;EAAc,CAAC,GAAGd,UAAU,CAC9C;IACE,GAAGM,KAAK;IACRS,MAAM,EAAEJ,KAAK,CAACI,MAAM;IACpBC,OAAO,EAAEL,KAAK,CAACM;EACjB,CAAC,EACDL,GACF,CAAC;EACDX,gBAAgB,CAAC;IACfiB,UAAU,EAAE,CAACP,KAAK,CAACI,MAAM,IAAI,CAACT,KAAK,CAACI;EACtC,CAAC,CAAC;EACFR,sBAAsB,CAAC,CAAC;EACxBE,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,CAACI,MAAM,IAAIH,GAAG,CAACO,OAAO,EAAE;MAC/B,OAAOpB,eAAe,CAAC,CAACa,GAAG,CAACO,OAAO,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACR,KAAK,CAACI,MAAM,EAAEH,GAAG,CAAC,CAAC;EACvB,OAAO;IACLQ,UAAU,EAAEjB,UAAU,CAACU,YAAY,CAAC;IACpCC;EACF,CAAC;AACH;AACA,SACET,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}