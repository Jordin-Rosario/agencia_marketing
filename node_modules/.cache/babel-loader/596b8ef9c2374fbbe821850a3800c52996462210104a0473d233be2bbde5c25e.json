{"ast":null,"code":"// src/index.ts\nimport { useCallback, useRef, useState } from \"react\";\nfunction useMeasure() {\n  const [dimensions, setDimensions] = useState({\n    width: null,\n    height: null\n  });\n  const previousObserver = useRef(null);\n  const customRef = useCallback(node => {\n    if (previousObserver.current) {\n      previousObserver.current.disconnect();\n      previousObserver.current = null;\n    }\n    if ((node == null ? void 0 : node.nodeType) === Node.ELEMENT_NODE) {\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry && entry.borderBoxSize) {\n          const {\n            inlineSize: width,\n            blockSize: height\n          } = entry.borderBoxSize[0];\n          setDimensions({\n            width,\n            height\n          });\n        }\n      });\n      observer.observe(node);\n      previousObserver.current = observer;\n    }\n  }, []);\n  return [customRef, dimensions];\n}\nexport { useMeasure };","map":{"version":3,"names":["useCallback","useRef","useState","useMeasure","dimensions","setDimensions","width","height","previousObserver","customRef","node","current","disconnect","nodeType","Node","ELEMENT_NODE","observer","ResizeObserver","entry","borderBoxSize","inlineSize","blockSize","observe"],"sources":["C:/Users/Jordin Rosario/agencia/agencia_marketing/node_modules/@nextui-org/use-measure/dist/index.mjs"],"sourcesContent":["// src/index.ts\r\nimport { useCallback, useRef, useState } from \"react\";\r\nfunction useMeasure() {\r\n  const [dimensions, setDimensions] = useState({\r\n    width: null,\r\n    height: null\r\n  });\r\n  const previousObserver = useRef(null);\r\n  const customRef = useCallback((node) => {\r\n    if (previousObserver.current) {\r\n      previousObserver.current.disconnect();\r\n      previousObserver.current = null;\r\n    }\r\n    if ((node == null ? void 0 : node.nodeType) === Node.ELEMENT_NODE) {\r\n      const observer = new ResizeObserver(([entry]) => {\r\n        if (entry && entry.borderBoxSize) {\r\n          const { inlineSize: width, blockSize: height } = entry.borderBoxSize[0];\r\n          setDimensions({ width, height });\r\n        }\r\n      });\r\n      observer.observe(node);\r\n      previousObserver.current = observer;\r\n    }\r\n  }, []);\r\n  return [customRef, dimensions];\r\n}\r\nexport {\r\n  useMeasure\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC;IAC3CI,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAGP,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMQ,SAAS,GAAGT,WAAW,CAAEU,IAAI,IAAK;IACtC,IAAIF,gBAAgB,CAACG,OAAO,EAAE;MAC5BH,gBAAgB,CAACG,OAAO,CAACC,UAAU,CAAC,CAAC;MACrCJ,gBAAgB,CAACG,OAAO,GAAG,IAAI;IACjC;IACA,IAAI,CAACD,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACG,QAAQ,MAAMC,IAAI,CAACC,YAAY,EAAE;MACjE,MAAMC,QAAQ,GAAG,IAAIC,cAAc,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK;QAC/C,IAAIA,KAAK,IAAIA,KAAK,CAACC,aAAa,EAAE;UAChC,MAAM;YAAEC,UAAU,EAAEd,KAAK;YAAEe,SAAS,EAAEd;UAAO,CAAC,GAAGW,KAAK,CAACC,aAAa,CAAC,CAAC,CAAC;UACvEd,aAAa,CAAC;YAAEC,KAAK;YAAEC;UAAO,CAAC,CAAC;QAClC;MACF,CAAC,CAAC;MACFS,QAAQ,CAACM,OAAO,CAACZ,IAAI,CAAC;MACtBF,gBAAgB,CAACG,OAAO,GAAGK,QAAQ;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACP,SAAS,EAAEL,UAAU,CAAC;AAChC;AACA,SACED,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}