{"ast":null,"code":"\"use client\";\n\n// src/use-aria-popover.ts\nimport { useEffect } from \"react\";\nimport { useOverlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { ariaHideOutside, toReactAriaPlacement, ariaShouldCloseOnInteractOutside } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useSafeLayoutEffect } from \"@nextui-org/use-safe-layout-effect\";\nfunction useReactAriaPopover(props, state) {\n  const {\n    triggerRef,\n    popoverRef,\n    showArrow,\n    offset = 7,\n    crossOffset = 0,\n    scrollRef,\n    shouldFlip,\n    boundaryElement,\n    isDismissable = true,\n    shouldCloseOnBlur = true,\n    placement: placementProp = \"top\",\n    containerPadding,\n    shouldCloseOnInteractOutside,\n    isNonModal: isNonModalProp,\n    isKeyboardDismissDisabled,\n    updatePositionDeps = [],\n    ...otherProps\n  } = props;\n  const isNonModal = isNonModalProp != null ? isNonModalProp : true;\n  const {\n    overlayProps,\n    underlayProps\n  } = useOverlay({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur,\n    isDismissable,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : element => ariaShouldCloseOnInteractOutside(element, triggerRef, state)\n  }, popoverRef);\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement,\n    updatePosition\n  } = useOverlayPosition({\n    ...otherProps,\n    shouldFlip,\n    crossOffset,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    scrollRef,\n    boundaryElement,\n    containerPadding,\n    placement: toReactAriaPlacement(placementProp),\n    offset: showArrow ? offset + 3 : offset,\n    onClose: isNonModal ? state.close : () => {}\n  });\n  useSafeLayoutEffect(() => {\n    if (!updatePositionDeps.length) return;\n    updatePosition();\n  }, updatePositionDeps);\n  useEffect(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement\n  };\n}\nexport { useReactAriaPopover };","map":{"version":3,"names":["useEffect","useOverlay","useOverlayPosition","ariaHideOutside","toReactAriaPlacement","ariaShouldCloseOnInteractOutside","mergeProps","useSafeLayoutEffect","useReactAriaPopover","props","state","triggerRef","popoverRef","showArrow","offset","crossOffset","scrollRef","shouldFlip","boundaryElement","isDismissable","shouldCloseOnBlur","placement","placementProp","containerPadding","shouldCloseOnInteractOutside","isNonModal","isNonModalProp","isKeyboardDismissDisabled","updatePositionDeps","otherProps","overlayProps","underlayProps","isOpen","onClose","close","element","positionProps","arrowProps","updatePosition","targetRef","overlayRef","length","current","popoverProps"],"sources":["C:/Users/Jordin Rosario/agencia/agencia_marketing/node_modules/@nextui-org/popover/dist/chunk-VS6DTHTW.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-aria-popover.ts\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  useOverlay,\r\n  useOverlayPosition\r\n} from \"@react-aria/overlays\";\r\nimport {\r\n  ariaHideOutside,\r\n  toReactAriaPlacement,\r\n  ariaShouldCloseOnInteractOutside\r\n} from \"@nextui-org/aria-utils\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nimport { useSafeLayoutEffect } from \"@nextui-org/use-safe-layout-effect\";\r\nfunction useReactAriaPopover(props, state) {\r\n  const {\r\n    triggerRef,\r\n    popoverRef,\r\n    showArrow,\r\n    offset = 7,\r\n    crossOffset = 0,\r\n    scrollRef,\r\n    shouldFlip,\r\n    boundaryElement,\r\n    isDismissable = true,\r\n    shouldCloseOnBlur = true,\r\n    placement: placementProp = \"top\",\r\n    containerPadding,\r\n    shouldCloseOnInteractOutside,\r\n    isNonModal: isNonModalProp,\r\n    isKeyboardDismissDisabled,\r\n    updatePositionDeps = [],\r\n    ...otherProps\r\n  } = props;\r\n  const isNonModal = isNonModalProp != null ? isNonModalProp : true;\r\n  const { overlayProps, underlayProps } = useOverlay(\r\n    {\r\n      isOpen: state.isOpen,\r\n      onClose: state.close,\r\n      shouldCloseOnBlur,\r\n      isDismissable,\r\n      isKeyboardDismissDisabled,\r\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : (element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state)\r\n    },\r\n    popoverRef\r\n  );\r\n  const {\r\n    overlayProps: positionProps,\r\n    arrowProps,\r\n    placement,\r\n    updatePosition\r\n  } = useOverlayPosition({\r\n    ...otherProps,\r\n    shouldFlip,\r\n    crossOffset,\r\n    targetRef: triggerRef,\r\n    overlayRef: popoverRef,\r\n    isOpen: state.isOpen,\r\n    scrollRef,\r\n    boundaryElement,\r\n    containerPadding,\r\n    placement: toReactAriaPlacement(placementProp),\r\n    offset: showArrow ? offset + 3 : offset,\r\n    onClose: isNonModal ? state.close : () => {\r\n    }\r\n  });\r\n  useSafeLayoutEffect(() => {\r\n    if (!updatePositionDeps.length)\r\n      return;\r\n    updatePosition();\r\n  }, updatePositionDeps);\r\n  useEffect(() => {\r\n    if (state.isOpen && !isNonModal && popoverRef.current) {\r\n      return ariaHideOutside([popoverRef.current]);\r\n    }\r\n  }, [isNonModal, state.isOpen, popoverRef]);\r\n  return {\r\n    popoverProps: mergeProps(overlayProps, positionProps),\r\n    arrowProps,\r\n    underlayProps,\r\n    placement\r\n  };\r\n}\r\n\r\nexport {\r\n  useReactAriaPopover\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SACEC,UAAU,EACVC,kBAAkB,QACb,sBAAsB;AAC7B,SACEC,eAAe,EACfC,oBAAoB,EACpBC,gCAAgC,QAC3B,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,mBAAmBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACzC,MAAM;IACJC,UAAU;IACVC,UAAU;IACVC,SAAS;IACTC,MAAM,GAAG,CAAC;IACVC,WAAW,GAAG,CAAC;IACfC,SAAS;IACTC,UAAU;IACVC,eAAe;IACfC,aAAa,GAAG,IAAI;IACpBC,iBAAiB,GAAG,IAAI;IACxBC,SAAS,EAAEC,aAAa,GAAG,KAAK;IAChCC,gBAAgB;IAChBC,4BAA4B;IAC5BC,UAAU,EAAEC,cAAc;IAC1BC,yBAAyB;IACzBC,kBAAkB,GAAG,EAAE;IACvB,GAAGC;EACL,CAAC,GAAGpB,KAAK;EACT,MAAMgB,UAAU,GAAGC,cAAc,IAAI,IAAI,GAAGA,cAAc,GAAG,IAAI;EACjE,MAAM;IAAEI,YAAY;IAAEC;EAAc,CAAC,GAAG9B,UAAU,CAChD;IACE+B,MAAM,EAAEtB,KAAK,CAACsB,MAAM;IACpBC,OAAO,EAAEvB,KAAK,CAACwB,KAAK;IACpBd,iBAAiB;IACjBD,aAAa;IACbQ,yBAAyB;IACzBH,4BAA4B,EAAEA,4BAA4B,GAAGA,4BAA4B,GAAIW,OAAO,IAAK9B,gCAAgC,CAAC8B,OAAO,EAAExB,UAAU,EAAED,KAAK;EACtK,CAAC,EACDE,UACF,CAAC;EACD,MAAM;IACJkB,YAAY,EAAEM,aAAa;IAC3BC,UAAU;IACVhB,SAAS;IACTiB;EACF,CAAC,GAAGpC,kBAAkB,CAAC;IACrB,GAAG2B,UAAU;IACbZ,UAAU;IACVF,WAAW;IACXwB,SAAS,EAAE5B,UAAU;IACrB6B,UAAU,EAAE5B,UAAU;IACtBoB,MAAM,EAAEtB,KAAK,CAACsB,MAAM;IACpBhB,SAAS;IACTE,eAAe;IACfK,gBAAgB;IAChBF,SAAS,EAAEjB,oBAAoB,CAACkB,aAAa,CAAC;IAC9CR,MAAM,EAAED,SAAS,GAAGC,MAAM,GAAG,CAAC,GAAGA,MAAM;IACvCmB,OAAO,EAAER,UAAU,GAAGf,KAAK,CAACwB,KAAK,GAAG,MAAM,CAC1C;EACF,CAAC,CAAC;EACF3B,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAACqB,kBAAkB,CAACa,MAAM,EAC5B;IACFH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAEV,kBAAkB,CAAC;EACtB5B,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,CAACsB,MAAM,IAAI,CAACP,UAAU,IAAIb,UAAU,CAAC8B,OAAO,EAAE;MACrD,OAAOvC,eAAe,CAAC,CAACS,UAAU,CAAC8B,OAAO,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACjB,UAAU,EAAEf,KAAK,CAACsB,MAAM,EAAEpB,UAAU,CAAC,CAAC;EAC1C,OAAO;IACL+B,YAAY,EAAErC,UAAU,CAACwB,YAAY,EAAEM,aAAa,CAAC;IACrDC,UAAU;IACVN,aAAa;IACbV;EACF,CAAC;AACH;AAEA,SACEb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}