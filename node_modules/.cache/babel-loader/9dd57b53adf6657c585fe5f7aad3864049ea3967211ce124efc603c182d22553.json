{"ast":null,"code":"\"use client\";\n\n// src/use-dropdown.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { dropdown } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { ariaShouldCloseOnInteractOutside } from \"@nextui-org/aria-utils\";\nimport { useMemo, useRef } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useDropdown(props) {\n  var _a;\n  const globalContext = useProviderContext();\n  const {\n    as,\n    triggerRef: triggerRefProp,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    type = \"menu\",\n    trigger = \"press\",\n    placement = \"bottom\",\n    closeOnSelect = true,\n    shouldBlockScroll = true,\n    classNames: classNamesProp,\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\n    onClose,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const triggerRef = useRef(null);\n  const menuTriggerRef = triggerRefProp || triggerRef;\n  const menuRef = useRef(null);\n  const popoverRef = useRef(null);\n  const state = useMenuTriggerState({\n    trigger,\n    isOpen,\n    defaultOpen,\n    onOpenChange: isOpen2 => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const {\n    menuTriggerProps,\n    menuProps\n  } = useMenuTrigger({\n    type,\n    trigger,\n    isDisabled\n  }, state, menuTriggerRef);\n  const classNames = useMemo(() => dropdown({\n    className\n  }), [className]);\n  const onMenuAction = menuCloseOnSelect => {\n    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {\n      return;\n    }\n    if (closeOnSelect) {\n      state.close();\n    }\n  };\n  const getPopoverProps = (props2 = {}) => {\n    const popoverProps = mergeProps(otherProps, props2);\n    return {\n      state,\n      placement,\n      ref: popoverRef,\n      disableAnimation,\n      shouldBlockScroll,\n      scrollRef: menuRef,\n      triggerRef: menuTriggerRef,\n      ...popoverProps,\n      classNames: {\n        ...classNamesProp,\n        ...props2.classNames,\n        content: clsx(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)\n      },\n      shouldCloseOnInteractOutside: (popoverProps == null ? void 0 : popoverProps.shouldCloseOnInteractOutside) ? popoverProps.shouldCloseOnInteractOutside : element => ariaShouldCloseOnInteractOutside(element, triggerRef, state)\n    };\n  };\n  const getMenuTriggerProps = (originalProps = {}, _ref = null) => {\n    const {\n      onPress,\n      onPressStart,\n      ...otherMenuTriggerProps\n    } = menuTriggerProps;\n    return {\n      ...mergeProps(otherMenuTriggerProps, {\n        isDisabled\n      }, originalProps),\n      ref: mergeRefs(_ref, triggerRef)\n    };\n  };\n  const getMenuProps = (props2, _ref = null) => {\n    return {\n      ref: mergeRefs(_ref, menuRef),\n      menuProps,\n      closeOnSelect,\n      ...mergeProps(props2, {\n        onAction: () => onMenuAction(props2 == null ? void 0 : props2.closeOnSelect),\n        onClose: state.close\n      })\n    };\n  };\n  return {\n    Component,\n    menuRef,\n    menuProps,\n    classNames,\n    closeOnSelect,\n    onClose: state.close,\n    autoFocus: state.focusStrategy || true,\n    disableAnimation,\n    getPopoverProps,\n    getMenuProps,\n    getMenuTriggerProps\n  };\n}\nexport { useDropdown };","map":{"version":3,"names":["useProviderContext","useMenuTriggerState","useMenuTrigger","dropdown","clsx","mergeRefs","ariaShouldCloseOnInteractOutside","useMemo","useRef","mergeProps","useDropdown","props","_a","globalContext","as","triggerRef","triggerRefProp","isOpen","defaultOpen","onOpenChange","isDisabled","type","trigger","placement","closeOnSelect","shouldBlockScroll","classNames","classNamesProp","disableAnimation","onClose","className","otherProps","Component","menuTriggerRef","menuRef","popoverRef","state","isOpen2","menuTriggerProps","menuProps","onMenuAction","menuCloseOnSelect","close","getPopoverProps","props2","popoverProps","ref","scrollRef","content","shouldCloseOnInteractOutside","element","getMenuTriggerProps","originalProps","_ref","onPress","onPressStart","otherMenuTriggerProps","getMenuProps","onAction","autoFocus","focusStrategy"],"sources":["C:/Users/Jordin Rosario/agencia/agencia_marketing/node_modules/@nextui-org/dropdown/dist/chunk-BUJKZ6BQ.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-dropdown.ts\r\nimport { useProviderContext } from \"@nextui-org/system\";\r\nimport { useMenuTriggerState } from \"@react-stately/menu\";\r\nimport { useMenuTrigger } from \"@react-aria/menu\";\r\nimport { dropdown } from \"@nextui-org/theme\";\r\nimport { clsx } from \"@nextui-org/shared-utils\";\r\nimport { mergeRefs } from \"@nextui-org/react-utils\";\r\nimport { ariaShouldCloseOnInteractOutside } from \"@nextui-org/aria-utils\";\r\nimport { useMemo, useRef } from \"react\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nfunction useDropdown(props) {\r\n  var _a;\r\n  const globalContext = useProviderContext();\r\n  const {\r\n    as,\r\n    triggerRef: triggerRefProp,\r\n    isOpen,\r\n    defaultOpen,\r\n    onOpenChange,\r\n    isDisabled,\r\n    type = \"menu\",\r\n    trigger = \"press\",\r\n    placement = \"bottom\",\r\n    closeOnSelect = true,\r\n    shouldBlockScroll = true,\r\n    classNames: classNamesProp,\r\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\r\n    onClose,\r\n    className,\r\n    ...otherProps\r\n  } = props;\r\n  const Component = as || \"div\";\r\n  const triggerRef = useRef(null);\r\n  const menuTriggerRef = triggerRefProp || triggerRef;\r\n  const menuRef = useRef(null);\r\n  const popoverRef = useRef(null);\r\n  const state = useMenuTriggerState({\r\n    trigger,\r\n    isOpen,\r\n    defaultOpen,\r\n    onOpenChange: (isOpen2) => {\r\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\r\n      if (!isOpen2) {\r\n        onClose == null ? void 0 : onClose();\r\n      }\r\n    }\r\n  });\r\n  const { menuTriggerProps, menuProps } = useMenuTrigger(\r\n    { type, trigger, isDisabled },\r\n    state,\r\n    menuTriggerRef\r\n  );\r\n  const classNames = useMemo(\r\n    () => dropdown({\r\n      className\r\n    }),\r\n    [className]\r\n  );\r\n  const onMenuAction = (menuCloseOnSelect) => {\r\n    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {\r\n      return;\r\n    }\r\n    if (closeOnSelect) {\r\n      state.close();\r\n    }\r\n  };\r\n  const getPopoverProps = (props2 = {}) => {\r\n    const popoverProps = mergeProps(otherProps, props2);\r\n    return {\r\n      state,\r\n      placement,\r\n      ref: popoverRef,\r\n      disableAnimation,\r\n      shouldBlockScroll,\r\n      scrollRef: menuRef,\r\n      triggerRef: menuTriggerRef,\r\n      ...popoverProps,\r\n      classNames: {\r\n        ...classNamesProp,\r\n        ...props2.classNames,\r\n        content: clsx(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)\r\n      },\r\n      shouldCloseOnInteractOutside: (popoverProps == null ? void 0 : popoverProps.shouldCloseOnInteractOutside) ? popoverProps.shouldCloseOnInteractOutside : (element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state)\r\n    };\r\n  };\r\n  const getMenuTriggerProps = (originalProps = {}, _ref = null) => {\r\n    const { onPress, onPressStart, ...otherMenuTriggerProps } = menuTriggerProps;\r\n    return {\r\n      ...mergeProps(otherMenuTriggerProps, { isDisabled }, originalProps),\r\n      ref: mergeRefs(_ref, triggerRef)\r\n    };\r\n  };\r\n  const getMenuProps = (props2, _ref = null) => {\r\n    return {\r\n      ref: mergeRefs(_ref, menuRef),\r\n      menuProps,\r\n      closeOnSelect,\r\n      ...mergeProps(props2, {\r\n        onAction: () => onMenuAction(props2 == null ? void 0 : props2.closeOnSelect),\r\n        onClose: state.close\r\n      })\r\n    };\r\n  };\r\n  return {\r\n    Component,\r\n    menuRef,\r\n    menuProps,\r\n    classNames,\r\n    closeOnSelect,\r\n    onClose: state.close,\r\n    autoFocus: state.focusStrategy || true,\r\n    disableAnimation,\r\n    getPopoverProps,\r\n    getMenuProps,\r\n    getMenuTriggerProps\r\n  };\r\n}\r\n\r\nexport {\r\n  useDropdown\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,gCAAgC,QAAQ,wBAAwB;AACzE,SAASC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAIC,EAAE;EACN,MAAMC,aAAa,GAAGb,kBAAkB,CAAC,CAAC;EAC1C,MAAM;IACJc,EAAE;IACFC,UAAU,EAAEC,cAAc;IAC1BC,MAAM;IACNC,WAAW;IACXC,YAAY;IACZC,UAAU;IACVC,IAAI,GAAG,MAAM;IACbC,OAAO,GAAG,OAAO;IACjBC,SAAS,GAAG,QAAQ;IACpBC,aAAa,GAAG,IAAI;IACpBC,iBAAiB,GAAG,IAAI;IACxBC,UAAU,EAAEC,cAAc;IAC1BC,gBAAgB,GAAG,CAAChB,EAAE,GAAGC,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACe,gBAAgB,KAAK,IAAI,GAAGhB,EAAE,GAAG,KAAK;IAC9GiB,OAAO;IACPC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGpB,KAAK;EACT,MAAMqB,SAAS,GAAGlB,EAAE,IAAI,KAAK;EAC7B,MAAMC,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMyB,cAAc,GAAGjB,cAAc,IAAID,UAAU;EACnD,MAAMmB,OAAO,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM2B,UAAU,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM4B,KAAK,GAAGnC,mBAAmB,CAAC;IAChCqB,OAAO;IACPL,MAAM;IACNC,WAAW;IACXC,YAAY,EAAGkB,OAAO,IAAK;MACzBlB,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACkB,OAAO,CAAC;MACrD,IAAI,CAACA,OAAO,EAAE;QACZR,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC,CAAC;MACtC;IACF;EACF,CAAC,CAAC;EACF,MAAM;IAAES,gBAAgB;IAAEC;EAAU,CAAC,GAAGrC,cAAc,CACpD;IAAEmB,IAAI;IAAEC,OAAO;IAAEF;EAAW,CAAC,EAC7BgB,KAAK,EACLH,cACF,CAAC;EACD,MAAMP,UAAU,GAAGnB,OAAO,CACxB,MAAMJ,QAAQ,CAAC;IACb2B;EACF,CAAC,CAAC,EACF,CAACA,SAAS,CACZ,CAAC;EACD,MAAMU,YAAY,GAAIC,iBAAiB,IAAK;IAC1C,IAAIA,iBAAiB,KAAK,KAAK,CAAC,IAAI,CAACA,iBAAiB,EAAE;MACtD;IACF;IACA,IAAIjB,aAAa,EAAE;MACjBY,KAAK,CAACM,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EACD,MAAMC,eAAe,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;IACvC,MAAMC,YAAY,GAAGpC,UAAU,CAACsB,UAAU,EAAEa,MAAM,CAAC;IACnD,OAAO;MACLR,KAAK;MACLb,SAAS;MACTuB,GAAG,EAAEX,UAAU;MACfP,gBAAgB;MAChBH,iBAAiB;MACjBsB,SAAS,EAAEb,OAAO;MAClBnB,UAAU,EAAEkB,cAAc;MAC1B,GAAGY,YAAY;MACfnB,UAAU,EAAE;QACV,GAAGC,cAAc;QACjB,GAAGiB,MAAM,CAAClB,UAAU;QACpBsB,OAAO,EAAE5C,IAAI,CAACsB,UAAU,EAAEC,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACqB,OAAO,EAAEJ,MAAM,CAACd,SAAS;MACtG,CAAC;MACDmB,4BAA4B,EAAE,CAACJ,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,4BAA4B,IAAIJ,YAAY,CAACI,4BAA4B,GAAIC,OAAO,IAAK5C,gCAAgC,CAAC4C,OAAO,EAAEnC,UAAU,EAAEqB,KAAK;IAClO,CAAC;EACH,CAAC;EACD,MAAMe,mBAAmB,GAAGA,CAACC,aAAa,GAAG,CAAC,CAAC,EAAEC,IAAI,GAAG,IAAI,KAAK;IAC/D,MAAM;MAAEC,OAAO;MAAEC,YAAY;MAAE,GAAGC;IAAsB,CAAC,GAAGlB,gBAAgB;IAC5E,OAAO;MACL,GAAG7B,UAAU,CAAC+C,qBAAqB,EAAE;QAAEpC;MAAW,CAAC,EAAEgC,aAAa,CAAC;MACnEN,GAAG,EAAEzC,SAAS,CAACgD,IAAI,EAAEtC,UAAU;IACjC,CAAC;EACH,CAAC;EACD,MAAM0C,YAAY,GAAGA,CAACb,MAAM,EAAES,IAAI,GAAG,IAAI,KAAK;IAC5C,OAAO;MACLP,GAAG,EAAEzC,SAAS,CAACgD,IAAI,EAAEnB,OAAO,CAAC;MAC7BK,SAAS;MACTf,aAAa;MACb,GAAGf,UAAU,CAACmC,MAAM,EAAE;QACpBc,QAAQ,EAAEA,CAAA,KAAMlB,YAAY,CAACI,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACpB,aAAa,CAAC;QAC5EK,OAAO,EAAEO,KAAK,CAACM;MACjB,CAAC;IACH,CAAC;EACH,CAAC;EACD,OAAO;IACLV,SAAS;IACTE,OAAO;IACPK,SAAS;IACTb,UAAU;IACVF,aAAa;IACbK,OAAO,EAAEO,KAAK,CAACM,KAAK;IACpBiB,SAAS,EAAEvB,KAAK,CAACwB,aAAa,IAAI,IAAI;IACtChC,gBAAgB;IAChBe,eAAe;IACfc,YAAY;IACZN;EACF,CAAC;AACH;AAEA,SACEzC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}